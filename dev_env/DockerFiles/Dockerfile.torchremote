# Create a jupyter notebook image based on dockerized torch110 kernel.
from ugurcan:pytorchkernel

# Define work directory.
WORKDIR /home/Thesis

# Pycharm looks for python3 interpreter under '/usr/bin' directory. However, torch container
# stores python3 interpreter under 'opt/conda/bin/'. For convenient development environment assign
# a symbolic link to container interpreter.
RUN ln -s /opt/conda/bin/python3 /usr/bin/python3

### SSH Serving
# Taken from - https://docs.docker.com/engine/examples/running_ssh_service/#environment-variables
RUN mkdir /var/run/sshd
RUN echo 'root:root' | chpasswd
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

ENV NOTVISIBLE "in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile

# 22 for ssh server. 7777 for gdb server.
EXPOSE 22 7777

# Create dev user with password 'dev'
RUN useradd -ms /bin/bash ugur
RUN echo 'ugur:ceFetal2022' | chpasswd

# Set UID and GID of the user in Docker to local UID and GID of the local user.
# With this operation docker user have the same permissions with local one.
RUN usermod -u 1009 ugur
RUN groupmod -g 1012 ugur

# Upon start, run ssh daemon
CMD ["/usr/sbin/sshd", "-D"]